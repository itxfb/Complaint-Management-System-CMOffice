
@using Microsoft.Ajax.Utilities
@using PITB.CMS_Common
@using System.Linq
@using PITB.CMS_Common.Handler.Permission
@using PITB.CMS_Common.Models.View.Dynamic
@model PITB.CMS_Common.Models.View.VmAddComplaint

@{
    //if (Request.IsAjaxRequest()) { Layout = null; }
    ViewBag.Title = "Add Complaint";
}
<style>
    .Complaint.active {
        border-top-color: #fbcc3e !important;
    }

    .Suggestion.active {
        border-top-color: #008000 !important;
    }

    .Inquiry.active {
        border-top-color: #ff0000 !important;
    }
    /*.select2 {
        width: 100% !important;
    }*/
    /*input {
        text-transform: uppercase;
    }*/
</style>

<div class="content-wrapper">
    <div class="container-fluid">

        <section class="content">
            <div style="    width: 50px;
                                       left: 0;
                                       position: fixed;
                                       z-index: 1000;
                                       margin: 0;
                                       height: 100px;">
                <img width="50px" src="@Url.Content(ViewBag.Campaignname)" alt="Alternate Text" />


            </div>
            @using (Html.BeginForm("OnAddComplaintSubmit", "Complaint", FormMethod.Post, new { id = "AddComplaintForm" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(m => m.PersonalInfoVm.Person_id)
                if (Model.PersonalInfoVm != null)
                {
                    @Html.HiddenFor(m => m.PersonalInfoVm.Cnic_No)
                }
                @Html.HiddenFor(m => m.ComplaintVm.Compaign_Id)
                @Html.HiddenFor(m => m.currentComplaintTypeTab)
                @Html.HiddenFor(m => m.ComplaintVm.hasDepartment)
                @Html.HiddenFor(m => m.SuggestionVm.hasDepartment)
                @Html.HiddenFor(m => m.InquiryVm.hasDepartment)

                @*<label class="text-danger">@Html.ValidationSummary()</label>*@
                <section class="content">
                    <div class="row">
                        <div>

                            <div class="box box-primary">
                                <div class="box-header-blue with-border btn-header">
                                    <h4 class="box-title">Caller's Information</h4>
                                </div>
                                <div class="box-body-white" style="margin-top:5px;">
                                    <div class="form-group col-md-6">
                                        <div class="col-md-4">
                                            <label>Name *</label>
                                        </div>
                                        <div class="col-md-8">
                                            @Html.TextBoxFor(m => m.PersonalInfoVm.Person_Name, new { @class = "form-control characters-only-with-space text-uppercase", @placeholder = "Complainant Name" })
                                            @Html.ValidationMessageFor(m => m.PersonalInfoVm.Person_Name, "", new { @class = "label label-warning" })
                                        </div>
                                    </div>
                                    @*<div class="form-group col-md-6"> temporary hidden
                                            <div class="col-md-4">
                                                <label>Father/Husband Name</label>
                                            </div>
                                            <div class="col-md-8">
                                                @Html.TextBoxFor(m => m.PersonalInfoVm.Person_Father_Name, new { @class = "form-control characters-only-with-space", @placeholder = "Father/Husband Name" })
                                            </div>
                                        </div>*@
                                    @if (Model.PersonalInfoVm == null)
                                    {
                                        <div class="form-group col-md-6">
                                            <div class="col-md-4">
                                                <label>CNIC *</label>
                                            </div>
                                            <div class="col-md-4">
                                                @Html.TextBoxFor(m => m.PersonalInfoVm.Cnic_No, new { @class = "form-control numbers-only", @placeholder = "ex 3520174842579", @maxlength = 13, id = "CnicTxtBox" })
                                                @Html.ValidationMessageFor(m => m.PersonalInfoVm.Cnic_No, "", new { @class = "label label-warning" })
                                            </div>
                                            <div class="col-md-4">
                                                <div class="col-md-6" style="margin-top: 5px;">
                                                    CNIC not required
                                                </div>
                                                <div class="col-md-6">
                                                    @Html.CheckBoxFor(m => m.PersonalInfoVm.IsCnicPresent, new { @id = "IsCnicPresent", @Style = "width:20px;height:20px;" })
                                                </div>
                                            </div>
                                        </div>
                                    }
                                    <div class="form-group col-md-6">
                                        <div class="col-md-4">
                                            <label>Gender</label>
                                        </div>
                                        <div class="col-md-8">
                                            @Html.DropDownListFor(m => m.PersonalInfoVm.Gender, EnumHelper.GetSelectList(typeof(Config.Gender)), "--Select--", new { @class = "form-control", @placeholder = "ex 3520174842579" })
                                            @Html.ValidationMessageFor(m => m.PersonalInfoVm.Gender, "", new { @class = "label label-warning" })


                                        </div>
                                    </div>
                                    <div class="form-group col-md-6">
                                        <div class="col-md-4">
                                            <label>Cell Number *</label>
                                        </div>
                                        <div class="col-md-8">
                                            @Html.TextBoxFor(m => m.PersonalInfoVm.Mobile_No, new { @class = "form-control numbers-only", @placeholder = "03001234567", @maxlength = 11 })
                                            @Html.ValidationMessageFor(m => m.PersonalInfoVm.Mobile_No, "", new { @class = "label label-warning" })


                                        </div>
                                    </div>
                                    <div class="form-group col-md-6">
                                        <div class="col-md-4">
                                            <label>Secondary Contact No</label>
                                        </div>
                                        <div class="col-md-8">
                                            @Html.TextBoxFor(m => m.PersonalInfoVm.Secondary_Mobile_No, new { @class = "form-control numbers-only", @placeholder = "04235880062", @maxlength = 15 })


                                        </div>
                                    </div>
                                    <div class="form-group col-md-6">
                                        <div class="col-md-4">
                                            <label>Province *</label>
                                        </div>
                                        <div class="col-md-8">
                                            @Html.DropDownListFor(m => m.PersonalInfoVm.Province_Id, Model.ComplaintVm.ProvinceSelectList, new { @Id = "userControlPersonProvince", @class = "form-control" })
                                        </div>
                                    </div>
                                    <div class="form-group col-md-6">
                                        <div class="col-md-4">
                                            <label>District *</label>
                                        </div>
                                        <div class="col-md-8">
                                            @Html.DropDownListFor(m => m.PersonalInfoVm.District_Id, new List<SelectListItem>(), "--Select--", new { @Id = "userControlPersonDistrict", @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.PersonalInfoVm.District_Id, "", new { @class = "label label-warning" })


                                        </div>
                                    </div>
                                    <div class="form-group col-md-6">
                                        <div class="col-md-4">
                                            <label>Address</label>
                                        </div>
                                        <div class="col-md-8 col-xs-12">
                                            @Html.TextAreaFor(m => m.PersonalInfoVm.Person_Address, new { @class = "form-control", rows = 3 })
                                        </div>

                                    </div>
                                    
                                    
                                    @*--------Test validation--------*@
                                    <div class="form-group col-md-6">
                                        @Html.CheckBoxFor(model => model.PersonalInfoVm.IsAlert)
                                        @Html.LabelFor(model => model.PersonalInfoVm.IsAlert) @Html.Raw("     ")
                                        @Html.CheckBoxFor(model => model.PersonalInfoVm.IsEmail)
                                        @Html.LabelFor(model => model.PersonalInfoVm.IsEmail) @Html.Raw("     ")
                                        @Html.CheckBoxFor(model => model.PersonalInfoVm.IsSMS)
                                        @Html.LabelFor(model => model.PersonalInfoVm.IsSMS)
                                        @Html.ValidationMessageFor(model => model.PersonalInfoVm.IsSMS)
                                    </div>
                                    @*--------End Test validation--------*@

                                    @*<div class="form-group col-md-6">temporary
                                            <div class="col-md-4">
                                                <label>Nearest location (if any)</label>
                                            </div>
                                            <div class="col-md-8 col-xs-12">
                                                <textarea class="form-control" rows="3"></textarea>
                                            </div>

                                        </div>*@
                                    <br style="clear: both;" />

                                </div>
                            </div>
                        </div>
                        <!-- Tabs Area Start-->
                        <div class="nav-tabs-custom">
                            <ul class="nav nav-tabs">
                                <li class="active Complaint"><a href="#complaintArea" data-toggle="tab" aria-expanded="true">Complaint</a></li>
                                <li class="Suggestion"><a href="#suggestionArea" data-toggle="tab" aria-expanded="false">Suggestion</a></li>
                                <li class="Inquiry"><a href="#InquiryArea" data-toggle="tab" aria-expanded="false">Inquiry</a></li>
                                @*<li class="pull-right"><a href="#" class="text-muted"><i class="fa fa-gear"></i></a></li>*@
                            </ul>
                            <div class="tab-content">
                                
                                <!--Dynamic Form Area-->
                                <div class="tab-pane active" id="complaintArea">

                                    @if (Model.ComplaintVm.DynamicFieldsCount > 0)
                                    {

                                    }
                                </div>
                                <!--End Dynamic Form Area-->

                                <!--Complaint tab content-->
                                <div class="tab-pane active" id="complaintArea">

                                    @if (Model.ComplaintVm.DynamicFieldsCount > 0)
                                    {

                                        int index = 0;

                                        for (int i = Model.ComplaintVm.MinDynamicFormPriority; i <= Model.ComplaintVm.MaxDynamicFormPriority; i++)
                                        {

                                            List<VmDynamicDropDownList> listVmDropDownList = Model.ComplaintVm.ListDynamicDropDown.Where(n => n.Priority == i).ToList();
                                            List<VmDynamicTextbox> listVmTextBox = Model.ComplaintVm.ListDynamicTextBox.Where(n => n.Priority == i).ToList();
                                            List<VmDynamicDropDownListServerSide> listVmDropDownListServerSide = Model.ComplaintVm.ListDynamicDropDownServerSide.Where(n => n.Priority == i).ToList();

                                            // DropdownListCode
                                            if (listVmDropDownList != null)
                                            {
                                                foreach (VmDynamicDropDownList vmDropDownList in listVmDropDownList)
                                                {
                                                    index = Model.ComplaintVm.ListDynamicDropDown.FindIndex(n => n == vmDropDownList);
                                                    // adding custom code

                                                    //VmDynamicDropDownList vmDropDownList = Model.ComplaintVm.ListDynamicDropDown[index];
                                                    @Html.HiddenFor(m => m.ComplaintVm.ListDynamicDropDown[index].ControlId)
                                                    @Html.HiddenFor(m => m.ComplaintVm.ListDynamicDropDown[index].FieldName)
                                                    <div class="form-group col-md-6">
                                                        <div class="col-md-4">
                                                            <label>@vmDropDownList.FieldName</label>
                                                        </div>
                                                        <div class="col-md-8">
                                                            @Html.DropDownListFor(m => m.ComplaintVm.ListDynamicDropDown[index].SelectedItemId, vmDropDownList.FieldValue, "--Select--", new { @class = "form-control" })
                                                            @Html.ValidationMessageFor(m => m.ComplaintVm.ListDynamicDropDown[index].SelectedItemId, null, new { @class = "label label-warning" })
                                                            @Html.HiddenFor(m => m.ComplaintVm.ListDynamicDropDown[index].IsRequired)
                                                        </div>
                                                    </div>
                                                }
                                            }
                                            // end DropdownListCode

                                            // DropdownListCode server side
                                            if (listVmDropDownListServerSide != null)
                                            {
                                                foreach (VmDynamicDropDownListServerSide vmDropDownListServerSide in listVmDropDownListServerSide)
                                                {
                                                    index = Model.ComplaintVm.ListDynamicDropDownServerSide.FindIndex(n => n == vmDropDownListServerSide);
                                                    //string appendedDropDownListId = index+"_"+@Model.ComplaintVm.Compaign_Id + "_" + vmDropDownListServerSide.CategoryTypeId;
                                                    string appendedDropDownListId = Config.Separator + index + Config.Separator + Model.ComplaintVm.Compaign_Id + Config.Separator + vmDropDownListServerSide.CategoryTypeId + Config.Separator;
                                                    // adding custom code

                                                    @Html.HiddenFor(m => m.ComplaintVm.ListDynamicDropDownServerSide[index].ControlId)
                                                    @Html.HiddenFor(m => m.ComplaintVm.ListDynamicDropDownServerSide[index].FieldName)
                                                    <div class="form-group col-md-6">
                                                        <div class="col-md-4">
                                                            <label>@vmDropDownListServerSide.FieldName</label>
                                                        </div>
                                                        <div class="col-md-8">
                                                            @Html.DropDownListFor(m => m.ComplaintVm.ListDynamicDropDownServerSide[index].SelectedItemId, vmDropDownListServerSide.FieldValue, "--Select--", new { @class = "js-data-example-ajax form-control", @Id = "DynamicDropDownListServerSide" + appendedDropDownListId })
                                                            @Html.ValidationMessageFor(m => m.ComplaintVm.ListDynamicDropDownServerSide[index].SelectedItemId, null, new { @class = "label label-warning" })
                                                            @Html.HiddenFor(m => m.ComplaintVm.ListDynamicDropDownServerSide[index].IsRequired)
                                                        </div>
                                                    </div>
                                                }
                                            }

                                            // TextBox
                                            if (listVmTextBox != null)
                                            {
                                                foreach (VmDynamicTextbox vmTextBox in listVmTextBox)
                                                {
                                                    index = Model.ComplaintVm.ListDynamicTextBox.FindIndex(n => n == vmTextBox);
                                                    // adding custom code

                                                    //VmDynamicDropDownList vmDropDownList = Model.ComplaintVm.ListDynamicDropDown[index];
                                                    @Html.HiddenFor(m => m.ComplaintVm.ListDynamicTextBox[index].ControlId)
                                                    @Html.HiddenFor(m => m.ComplaintVm.ListDynamicTextBox[index].FieldName)
                                                    <div class="form-group col-md-6">
                                                        <div class="col-md-4">
                                                            <label>@vmTextBox.FieldName</label>
                                                            @*<label>@vmTextBox.FieldName</label>*@
                                                        </div>
                                                        <div class="col-md-8">
                                                            @Html.TextBoxFor(m => m.ComplaintVm.ListDynamicTextBox[index].FieldValue, new { @class = "form-control" })
                                                            @Html.ValidationMessageFor(m => m.ComplaintVm.ListDynamicTextBox[index].FieldValue, null, new { @class = "label label-warning" })
                                                            @Html.HiddenFor(m => m.ComplaintVm.ListDynamicTextBox[index].IsRequired)
                                                        </div>
                                                    </div>
                                                }
                                            }
                                            // end TextBox
                                        }

                                        <br clear="all" />
                                        <hr>
                                        <br clear="all" />
                                    }
                                    @if (@Model.ComplaintVm.ListOfDepartment != null && @Model.ComplaintVm.ListOfDepartment.Count > 0)
                                    {
                                        <div class="form-group col-md-6">
                                            <div class="col-md-4">
                                                <label>Department</label>
                                            </div>
                                            <div class="col-md-8">
                                                @Html.DropDownListFor(m => m.ComplaintVm.departmentId, Model.ComplaintVm.DepartmentSelectList, "--Select--", new { @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.ComplaintVm.departmentId, "", new { @class = "label label-warning" })


                                            </div>
                                        </div>
                                    }
                                    <div class="form-group col-md-6">
                                        <div class="col-md-4">
                                            <label>Complaint Category</label>
                                        </div>
                                        <div class="col-md-8">
                                            @Html.DropDownListFor(m => m.ComplaintVm.Complaint_Category, Model.ComplaintVm.ComplaintCategoriesSelectList, "--Select--", new { @class = "form-control", @placeholder = "ex 3520174842579" })
                                            @Html.ValidationMessageFor(m => m.ComplaintVm.Complaint_Category, "", new { @class = "label label-warning" })


                                        </div>
                                    </div>
                                    <div class="form-group col-md-6">
                                        <div class="col-md-4">
                                            <label>Complaint Sub Category</label>
                                        </div>
                                        <div class="col-md-8">
                                            @Html.DropDownListFor(m => m.ComplaintVm.Complaint_SubCategory, new List<SelectListItem>(), "--Select--", new { @class = "form-control", @placeholder = "ex 3520174842579" })
                                            @Html.ValidationMessageFor(m => m.ComplaintVm.Complaint_SubCategory, "", new { @class = "label label-warning" })


                                        </div>
                                    </div>
                                    @*<div class="form-group col-md-6">
                                            <div class="col-md-4">
                                                <label>Type</label>
                                            </div>
                                            <div class="col-md-8">
                                                @Html.DropDownListFor(m => m.ComplaintVm.Complaint_Type, EnumHelper.GetSelectList(typeof(Config.ComplaintType)), "--Select--", new { @class = "form-control", @placeholder = "ex 3520174842579" })
                                            </div>
                                        </div>*@

                                    <div class="form-group col-md-6">
                                        <div class="col-md-4">
                                            <label>Province</label>
                                        </div>
                                        <div class="col-md-8">
                                            @Html.DropDownListFor(m => m.ComplaintVm.Province_Id, Model.ComplaintVm.ProvinceSelectList, new { @Id = "complaintUserControlProvince", @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.ComplaintVm.Province_Id, "", new { @class = "label label-warning" })


                                        </div>
                                    </div>
                                    <div class="form-group col-md-6">
                                        <div class="col-md-4">
                                            <label>District</label>
                                        </div>
                                        <div class="col-md-8">
                                            @Html.DropDownListFor(m => m.ComplaintVm.District_Id, new List<SelectListItem>(), "--Select--", new { @Id = "complaintUserControlDistrict", @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.ComplaintVm.District_Id, "", new { @class = "label label-warning" })


                                        </div>
                                    </div>
                                    <div class="form-group col-md-6">
                                        <div class="col-md-4">
                                            <label>Town/Tehsil*</label>
                                        </div>
                                        <div class="col-md-8">
                                            @Html.DropDownListFor(m => m.ComplaintVm.Tehsil_Id, new List<SelectListItem>(), "--Select--", new { @Id = "complaintUserControlTownTehsil", @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.ComplaintVm.Tehsil_Id, "", new { @class = "label label-warning" })


                                        </div>
                                    </div>
                                    <div class="form-group col-md-6">
                                        <div class="col-md-4">
                                            <label>UC*</label>
                                        </div>
                                        <div class="col-md-8">
                                            @Html.DropDownListFor(m => m.ComplaintVm.UnionCouncil_Id, new List<SelectListItem>(), "--Select--", new { @Id = "complaintUserControlUc", @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.ComplaintVm.UnionCouncil_Id, "", new { @class = "label label-warning" })


                                        </div>
                                    </div>
                                    @if (PermissionHandler.IsPermissionAllowedInCampagin(Config.CampaignPermissions.ShowWards))
                                    {
                                        <div class="form-group col-md-6">
                                            <div class="col-md-4">
                                                <label>Wards*</label>
                                            </div>
                                            <div class="col-md-8">
                                                @Html.DropDownListFor(m => m.ComplaintVm.Ward_Id, new List<SelectListItem>(), "--Select--", new { @Id = "complaintUserControlWards", @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.ComplaintVm.Ward_Id, "", new { @class = "label label-warning" })


                                            </div>
                                        </div>
                                    }


                                    @*<div class="form-group col-md-6">
                                            <div class="col-md-4">
                                                <label>House / Shop No</label>
                                            </div>
                                            <div class="col-md-8">
                                                @Html.TextBoxFor(m => m.ComplaintVm.HomeShopNo, new { @class = "form-control", @placeholder = "Home or shop no" })
                                            </div>
                                        </div>
                                        <div class="form-group col-md-6">
                                            <div class="col-md-4">
                                                <label>Street No. / Name</label>
                                            </div>
                                            <div class="col-md-8">
                                                @Html.TextBoxFor(m => m.ComplaintVm.StreetNameNo, new { @class = "form-control", @placeholder = "Stree no or name" })
                                            </div>
                                        </div>
                                        <div class="form-group col-md-6">
                                            <div class="col-md-4">
                                                <label>Locality / Area</label>
                                            </div>
                                            <div class="col-md-8">
                                                @Html.TextBoxFor(m => m.ComplaintVm.LocalityArea, new { @class = "form-control", @placeholder = "Nearest Location" })
                                            </div>
                                        </div>*@
                <div class="form-group col-lg-6 col-md-6">
                    <div class="col-md-4 col-lg-4">
                        <label>Details of Complaint</label>
                    </div>
                    <div class="col-md-8">

                        @Html.TextAreaFor(m => m.ComplaintVm.Complaint_Remarks, new { @class = "form-control col-md-12 col-xs-12", rows = 3 })
                        @Html.ValidationMessageFor(m => m.ComplaintVm.Complaint_Remarks, "", new { @class = "label label-warning" })


                    </div>
                </div>
                                    <div class="form-group col-lg-12 col-md-12">
                                        <div class="col-md-2 col-lg-2">
                                            <label>Agent's comments </label>
                                        </div>
                                        <div class="col-md-10">
                                            @Html.TextAreaFor(m => m.ComplaintVm.Agent_Comments, new { @class = "form-control col-md-12 col-xs-12", rows = 3 })
                                            @Html.ValidationMessageFor(m => m.ComplaintVm.Agent_Comments, "", new { @class = "label label-warning" })


                                        </div>
                                    </div>
                                    <div class="form-group col-md-12">
                                        <button type="submit" style="margin: 5px 15px 0 0" class="btn btn-primary pull-right" onclick="OnSumitClick()"><span class="fa fa-save"></span>&nbsp;Submit</button>
                                    </div>
                                    <br clear="all" />
                                    @*<div class="col-md-12 col-xs-12">
                                            <div class="box box-primary">
                                                <div class="box-header-blue with-border btn-header">
                                                    <h4 class="box-title" style="float:left;"> New Complaint</h4>
                                                </div>


                                                <div class="box-body-white" style="margin-top:5px;">


                                                    <br style="clear: both;" />

                                                </div>

                                                <div class="box-footer">
                                                    <div class="col-md-8 col-md-offset-2 text-center"><button class="btn btn-primary" type="submit">Launch Complaint</button></div>
                                                </div>
                                            </div>
                                        </div>*@
                                </div>
                                <!--End Complaint-->
                                <!--Suggestion tab content-->
                                <div class="tab-pane" id="suggestionArea">

                                    @if (Model.SuggestionVm.DynamicFieldsCount > 0)
                                    {

                                        int index = 0;

                                        for (int i = Model.SuggestionVm.MinDynamicFormPriority; i <= Model.SuggestionVm.MaxDynamicFormPriority; i++)
                                        {

                                            List<VmDynamicDropDownList> listVmDropDownList = Model.SuggestionVm.ListDynamicDropDown.Where(n => n.Priority == i).ToList();
                                            List<VmDynamicTextbox> listVmTextBox = Model.SuggestionVm.ListDynamicTextBox.Where(n => n.Priority == i).ToList();
                                            List<VmDynamicDropDownListServerSide> listVmDropDownListServerSide = Model.SuggestionVm.ListDynamicDropDownServerSide.Where(n => n.Priority == i).ToList();

                                            // DropdownListCode
                                            if (listVmDropDownList != null)
                                            {
                                                foreach (VmDynamicDropDownList vmDropDownList in listVmDropDownList)
                                                {
                                                    index = Model.SuggestionVm.ListDynamicDropDown.FindIndex(n => n == vmDropDownList);
                                                    // adding custom code

                                                    //VmDynamicDropDownList vmDropDownList = Model.SuggestionVm.ListDynamicDropDown[index];
                                                    @Html.HiddenFor(m => m.SuggestionVm.ListDynamicDropDown[index].ControlId)
                                                    @Html.HiddenFor(m => m.SuggestionVm.ListDynamicDropDown[index].FieldName)
                                                    <div class="form-group col-md-6">
                                                        <div class="col-md-4">
                                                            <label>@vmDropDownList.FieldName</label>
                                                        </div>
                                                        <div class="col-md-8">
                                                            @Html.DropDownListFor(m => m.SuggestionVm.ListDynamicDropDown[index].SelectedItemId, vmDropDownList.FieldValue, "--Select--", new { @class = "form-control" })
                                                            @Html.ValidationMessageFor(m => m.SuggestionVm.ListDynamicDropDown[index].SelectedItemId, null, new { @class = "label label-warning" })
                                                            @Html.HiddenFor(m => m.SuggestionVm.ListDynamicDropDown[index].IsRequired)
                                                        </div>
                                                    </div>
                                                }
                                            }
                                            // end DropdownListCode

                                            // DropdownListCode server side
                                            if (listVmDropDownListServerSide != null)
                                            {
                                                foreach (VmDynamicDropDownListServerSide vmDropDownListServerSide in listVmDropDownListServerSide)
                                                {
                                                    index = Model.SuggestionVm.ListDynamicDropDownServerSide.FindIndex(n => n == vmDropDownListServerSide);
                                                    //string appendedDropDownListId = index+"_"+@Model.SuggestionVm.Compaign_Id + "_" + vmDropDownListServerSide.CategoryTypeId;
                                                    string appendedDropDownListId = Config.Separator + index + Config.Separator + Model.SuggestionVm.Compaign_Id + Config.Separator + vmDropDownListServerSide.CategoryTypeId + Config.Separator;
                                                    // adding custom code

                                                    @Html.HiddenFor(m => m.SuggestionVm.ListDynamicDropDownServerSide[index].ControlId)
                                                    @Html.HiddenFor(m => m.SuggestionVm.ListDynamicDropDownServerSide[index].FieldName)
                                                    <div class="form-group col-md-6">
                                                        <div class="col-md-4">
                                                            <label>@vmDropDownListServerSide.FieldName</label>
                                                        </div>
                                                        <div class="col-md-8">
                                                            @Html.DropDownListFor(m => m.SuggestionVm.ListDynamicDropDownServerSide[index].SelectedItemId, vmDropDownListServerSide.FieldValue, "--Select--", new { @class = "js-data-example-ajax form-control", @Id = "DynamicDropDownListServerSide" + appendedDropDownListId })
                                                            @Html.ValidationMessageFor(m => m.SuggestionVm.ListDynamicDropDownServerSide[index].SelectedItemId, null, new { @class = "label label-warning" })
                                                            @Html.HiddenFor(m => m.SuggestionVm.ListDynamicDropDownServerSide[index].IsRequired)
                                                        </div>
                                                    </div>
                                                }
                                            }

                                            // TextBox
                                            if (listVmTextBox != null)
                                            {
                                                foreach (VmDynamicTextbox vmTextBox in listVmTextBox)
                                                {
                                                    index = Model.SuggestionVm.ListDynamicTextBox.FindIndex(n => n == vmTextBox);
                                                    // adding custom code

                                                    //VmDynamicDropDownList vmDropDownList = Model.SuggestionVm.ListDynamicDropDown[index];
                                                    @Html.HiddenFor(m => m.SuggestionVm.ListDynamicTextBox[index].ControlId)
                                                    @Html.HiddenFor(m => m.SuggestionVm.ListDynamicTextBox[index].FieldName)
                                                    <div class="form-group col-md-6">
                                                        <div class="col-md-4">
                                                            <label>@vmTextBox.FieldName</label>
                                                            @*<label>@vmTextBox.FieldName</label>*@
                                                        </div>
                                                        <div class="col-md-8">
                                                            @Html.TextBoxFor(m => m.SuggestionVm.ListDynamicTextBox[index].FieldValue, new { @class = "form-control" })
                                                            @Html.ValidationMessageFor(m => m.SuggestionVm.ListDynamicTextBox[index].FieldValue, null, new { @class = "label label-warning" })
                                                            @Html.HiddenFor(m => m.SuggestionVm.ListDynamicTextBox[index].IsRequired)
                                                        </div>
                                                    </div>
                                                }
                                            }
                                            // end TextBox
                                        }

                                        <br clear="all" />
                                        <hr>
                                        <br clear="all" />
                                    }

                                    @if (@Model.SuggestionVm.ListOfDepartment != null && @Model.SuggestionVm.ListOfDepartment.Count > 0)
                                    {
                                        <div class="form-group col-md-6">
                                            <div class="col-md-4">
                                                <label>Department</label>
                                            </div>
                                            <div class="col-md-8">
                                                @Html.DropDownListFor(m => m.SuggestionVm.departmentId, Model.SuggestionVm.DepartmentSelectList, "--Select--", new { @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.SuggestionVm.departmentId, "", new { @class = "label label-warning" })


                                            </div>
                                        </div>
                                    }

                                    <div class="form-group col-md-6">
                                        <div class="col-md-4">
                                            <label>Suggestion Category</label>
                                        </div>
                                        <div class="col-md-8">
                                            @Html.DropDownListFor(m => m.SuggestionVm.Complaint_Category, Model.SuggestionVm.ComplaintCategoriesSelectList, "--Select--", new { @class = "form-control", @placeholder = "ex 3520174842579" })
                                            @Html.ValidationMessageFor(m => m.SuggestionVm.Complaint_Category, "", new { @class = "label label-warning" })


                                        </div>
                                    </div>
                                    <div class="form-group col-md-6">
                                        <div class="col-md-4">
                                            <label>Suggestion Sub Category</label>
                                        </div>
                                        <div class="col-md-8">
                                            @Html.DropDownListFor(m => m.SuggestionVm.Complaint_SubCategory, new List<SelectListItem>(), "--Select--", new { @class = "form-control", @placeholder = "ex 3520174842579" })
                                            @Html.ValidationMessageFor(m => m.SuggestionVm.Complaint_SubCategory, "", new { @class = "label label-warning" })


                                        </div>
                                    </div>


                                    <div class="form-group col-md-6">
                                        <div class="col-md-4">
                                            <label>Province</label>
                                        </div>
                                        <div class="col-md-8">
                                            @Html.DropDownListFor(m => m.SuggestionVm.Province_Id, Model.SuggestionVm.ProvinceSelectList, new { @Id = "suggestionUserControlProvince", @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.SuggestionVm.Province_Id, "", new { @class = "label label-warning" })


                                        </div>
                                    </div>
                                    <div class="form-group col-md-6">
                                        <div class="col-md-4">
                                            <label>District</label>
                                        </div>
                                        <div class="col-md-8">
                                            @Html.DropDownListFor(m => m.SuggestionVm.District_Id, new List<SelectListItem>(), "--Select--", new { @Id = "suggestionUserControlDistrict", @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.SuggestionVm.District_Id, "", new { @class = "label label-warning" })


                                        </div>
                                    </div>
                                    <div class="form-group col-md-6">
                                        <div class="col-md-4">
                                            <label>Town/Tehsil*</label>
                                        </div>
                                        <div class="col-md-8">
                                            @Html.DropDownListFor(m => m.SuggestionVm.Tehsil_Id, new List<SelectListItem>(), "--Select--", new { @Id = "suggestionUserControlTownTehsil", @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.SuggestionVm.Tehsil_Id, "", new { @class = "label label-warning" })


                                        </div>
                                    </div>
                                    <div class="form-group col-md-6">
                                        <div class="col-md-4">
                                            <label>UC*</label>
                                        </div>
                                        <div class="col-md-8">
                                            @Html.DropDownListFor(m => m.SuggestionVm.UnionCouncil_Id, new List<SelectListItem>(), "--Select--", new { @Id = "suggestionUserControlUc", @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.SuggestionVm.UnionCouncil_Id, "", new { @class = "label label-warning" })


                                        </div>
                                    </div>

                                    <div class="form-group col-md-6">
                                        <div class="col-md-4">
                                            <label>Wards*</label>
                                        </div>
                                        <div class="col-md-8">
                                            @Html.DropDownListFor(m => m.SuggestionVm.Ward_Id, new List<SelectListItem>(), "--Select--", new { @Id = "suggestionUserControlWards", @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.SuggestionVm.Ward_Id, "", new { @class = "label label-warning" })


                                        </div>
                                    </div>




                                    <div class="form-group col-lg-6 col-md-6">
                                        <div class="col-md-4 col-lg-4">
                                            <label>Details of Complaint</label>
                                        </div>
                                        <div class="col-md-8">

                                            @Html.TextAreaFor(m => m.SuggestionVm.Complaint_Remarks, new { @class = "form-control col-md-12 col-xs-12", rows = 3 })
                                            @Html.ValidationMessageFor(m => m.SuggestionVm.Complaint_Remarks, "", new { @class = "label label-warning" })


                                        </div>
                                    </div>
                                    <div class="form-group col-lg-12 col-md-12">
                                        <div class="col-md-2 col-lg-2">
                                            <label>Agent's comments </label>
                                        </div>
                                        <div class="col-md-10">
                                            @Html.TextAreaFor(m => m.SuggestionVm.Agent_Comments, new { @class = "form-control col-md-12 col-xs-12", rows = 3 })
                                            @Html.ValidationMessageFor(m => m.SuggestionVm.Agent_Comments, "", new { @class = "label label-warning" })


                                        </div>
                                    </div>
                                    <div class="form-group col-md-12">
                                        <button type="submit" style="margin: 5px 15px 0 0" class="btn btn-primary pull-right" onclick="OnSumitClick()"><span class="fa fa-save"></span>&nbsp;Submit</button>
                                    </div>
                                    <br clear="all" />

                                </div>
                                <!--End Suggestion tab content-->
                                <!--Inquiry tab content-->
                                <div class="tab-pane" id="InquiryArea">


                                    @if (Model.InquiryVm.DynamicFieldsCount > 0)
                                    {

                                        int index = 0;

                                        for (int i = Model.InquiryVm.MinDynamicFormPriority; i <= Model.InquiryVm.MaxDynamicFormPriority; i++)
                                        {

                                            List<VmDynamicDropDownList> listVmDropDownList = Model.InquiryVm.ListDynamicDropDown.Where(n => n.Priority == i).ToList();
                                            List<VmDynamicTextbox> listVmTextBox = Model.InquiryVm.ListDynamicTextBox.Where(n => n.Priority == i).ToList();
                                            List<VmDynamicDropDownListServerSide> listVmDropDownListServerSide = Model.InquiryVm.ListDynamicDropDownServerSide.Where(n => n.Priority == i).ToList();

                                            // DropdownListCode
                                            if (listVmDropDownList != null)
                                            {
                                                foreach (VmDynamicDropDownList vmDropDownList in listVmDropDownList)
                                                {
                                                    index = Model.InquiryVm.ListDynamicDropDown.FindIndex(n => n == vmDropDownList);
                                                    // adding custom code

                                                    //VmDynamicDropDownList vmDropDownList = Model.InquiryVm.ListDynamicDropDown[index];
                                                    @Html.HiddenFor(m => m.InquiryVm.ListDynamicDropDown[index].ControlId)
                                                    @Html.HiddenFor(m => m.InquiryVm.ListDynamicDropDown[index].FieldName)
                                                    <div class="form-group col-md-6">
                                                        <div class="col-md-4">
                                                            <label>@vmDropDownList.FieldName</label>
                                                        </div>
                                                        <div class="col-md-8">
                                                            @Html.DropDownListFor(m => m.InquiryVm.ListDynamicDropDown[index].SelectedItemId, vmDropDownList.FieldValue, "--Select--", new { @class = "form-control" })
                                                            @Html.ValidationMessageFor(m => m.InquiryVm.ListDynamicDropDown[index].SelectedItemId, null, new { @class = "label label-warning" })
                                                            @Html.HiddenFor(m => m.InquiryVm.ListDynamicDropDown[index].IsRequired)
                                                        </div>
                                                    </div>
                                                }
                                            }
                                            // end DropdownListCode

                                            // DropdownListCode server side
                                            if (listVmDropDownListServerSide != null)
                                            {
                                                foreach (VmDynamicDropDownListServerSide vmDropDownListServerSide in listVmDropDownListServerSide)
                                                {
                                                    index = Model.InquiryVm.ListDynamicDropDownServerSide.FindIndex(n => n == vmDropDownListServerSide);
                                                    //string appendedDropDownListId = index+"_"+@Model.InquiryVm.Compaign_Id + "_" + vmDropDownListServerSide.CategoryTypeId;
                                                    string appendedDropDownListId = Config.Separator + index + Config.Separator + Model.InquiryVm.Compaign_Id + Config.Separator + vmDropDownListServerSide.CategoryTypeId + Config.Separator;
                                                    // adding custom code

                                                    @Html.HiddenFor(m => m.InquiryVm.ListDynamicDropDownServerSide[index].ControlId)
                                                    @Html.HiddenFor(m => m.InquiryVm.ListDynamicDropDownServerSide[index].FieldName)
                                                    <div class="form-group col-md-6">
                                                        <div class="col-md-4">
                                                            <label>@vmDropDownListServerSide.FieldName</label>
                                                        </div>
                                                        <div class="col-md-8">
                                                            @Html.DropDownListFor(m => m.InquiryVm.ListDynamicDropDownServerSide[index].SelectedItemId, vmDropDownListServerSide.FieldValue, "--Select--", new { @class = "js-data-example-ajax form-control", @Id = "DynamicDropDownListServerSide" + appendedDropDownListId })
                                                            @Html.ValidationMessageFor(m => m.InquiryVm.ListDynamicDropDownServerSide[index].SelectedItemId, null, new { @class = "label label-warning" })
                                                            @Html.HiddenFor(m => m.InquiryVm.ListDynamicDropDownServerSide[index].IsRequired)
                                                        </div>
                                                    </div>
                                                }
                                            }

                                            // TextBox
                                            if (listVmTextBox != null)
                                            {
                                                foreach (VmDynamicTextbox vmTextBox in listVmTextBox)
                                                {
                                                    index = Model.InquiryVm.ListDynamicTextBox.FindIndex(n => n == vmTextBox);
                                                    // adding custom code

                                                    //VmDynamicDropDownList vmDropDownList = Model.InquiryVm.ListDynamicDropDown[index];
                                                    @Html.HiddenFor(m => m.InquiryVm.ListDynamicTextBox[index].ControlId)
                                                    @Html.HiddenFor(m => m.InquiryVm.ListDynamicTextBox[index].FieldName)
                                                    <div class="form-group col-md-6">
                                                        <div class="col-md-4">
                                                            <label>@vmTextBox.FieldName</label>
                                                            @*<label>@vmTextBox.FieldName</label>*@
                                                        </div>
                                                        <div class="col-md-8">
                                                            @Html.TextBoxFor(m => m.InquiryVm.ListDynamicTextBox[index].FieldValue, new { @class = "form-control" })
                                                            @Html.ValidationMessageFor(m => m.InquiryVm.ListDynamicTextBox[index].FieldValue, null, new { @class = "label label-warning" })
                                                            @Html.HiddenFor(m => m.InquiryVm.ListDynamicTextBox[index].IsRequired)
                                                        </div>
                                                    </div>
                                                }
                                            }
                                            // end TextBox
                                        }

                                        <br clear="all" />
                                        <hr>
                                        <br clear="all" />
                                    }

                                    @if (@Model.InquiryVm.ListOfDepartment != null && @Model.InquiryVm.ListOfDepartment.Count > 0)
                                    {
                                        <div class="form-group col-md-6">
                                            <div class="col-md-4">
                                                <label>Department</label>
                                            </div>
                                            <div class="col-md-8">
                                                @Html.DropDownListFor(m => m.InquiryVm.departmentId, Model.InquiryVm.DepartmentSelectList, "--Select--", new { @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.InquiryVm.departmentId, "", new { @class = "label label-warning" })


                                            </div>
                                        </div>
                                    }

                                    <div class="form-group col-md-6">
                                        <div class="col-md-4">
                                            <label>Inquiry Category</label>
                                        </div>
                                        <div class="col-md-8">
                                            @Html.DropDownListFor(m => m.InquiryVm.Complaint_Category, Model.InquiryVm.ComplaintCategoriesSelectList, "--Select--", new { @class = "form-control", @placeholder = "ex 3520174842579" })
                                            @Html.ValidationMessageFor(m => m.InquiryVm.Complaint_Category, "", new { @class = "label label-warning" })


                                        </div>
                                    </div>
                                    <div class="form-group col-md-6">
                                        <div class="col-md-4">
                                            <label>Inquiry Sub Category</label>
                                        </div>
                                        <div class="col-md-8">
                                            @Html.DropDownListFor(m => m.InquiryVm.Complaint_SubCategory, new List<SelectListItem>(), "--Select--", new { @class = "form-control", @placeholder = "ex 3520174842579" })
                                            @Html.ValidationMessageFor(m => m.InquiryVm.Complaint_SubCategory, "", new { @class = "label label-warning" })


                                        </div>
                                    </div>


                                    <div class="form-group col-md-6">
                                        <div class="col-md-4">
                                            <label>Province</label>
                                        </div>
                                        <div class="col-md-8">
                                            @Html.DropDownListFor(m => m.InquiryVm.Province_Id, Model.InquiryVm.ProvinceSelectList, new { @Id = "inquiryUserControlProvince", @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.InquiryVm.Province_Id, "", new { @class = "label label-warning" })


                                        </div>
                                    </div>
                                    <div class="form-group col-md-6">
                                        <div class="col-md-4">
                                            <label>District</label>
                                        </div>
                                        <div class="col-md-8">
                                            @Html.DropDownListFor(m => m.InquiryVm.District_Id, new List<SelectListItem>(), "--Select--", new { @Id = "inquiryUserControlDistrict", @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.InquiryVm.District_Id, "", new { @class = "label label-warning" })


                                        </div>
                                    </div>
                                    <div class="form-group col-md-6">
                                        <div class="col-md-4">
                                            <label>Town/Tehsil*</label>
                                        </div>
                                        <div class="col-md-8">
                                            @Html.DropDownListFor(m => m.InquiryVm.Tehsil_Id, new List<SelectListItem>(), "--Select--", new { @Id = "inquiryUserControlTownTehsil", @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.InquiryVm.Tehsil_Id, "", new { @class = "label label-warning" })


                                        </div>
                                    </div>
                                    <div class="form-group col-md-6">
                                        <div class="col-md-4">
                                            <label>UC*</label>
                                        </div>
                                        <div class="col-md-8">
                                            @Html.DropDownListFor(m => m.InquiryVm.UnionCouncil_Id, new List<SelectListItem>(), "--Select--", new { @Id = "inquiryUserControlUc", @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.InquiryVm.UnionCouncil_Id, "", new { @class = "label label-warning" })


                                        </div>
                                    </div>

                                    <div class="form-group col-md-6">
                                        <div class="col-md-4">
                                            <label>Wards*</label>
                                        </div>
                                        <div class="col-md-8">
                                            @Html.DropDownListFor(m => m.InquiryVm.Ward_Id, new List<SelectListItem>(), "--Select--", new { @Id = "inquiryUserControlWards", @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.InquiryVm.Ward_Id, "", new { @class = "label label-warning" })


                                        </div>
                                    </div>



                                    <div class="form-group col-lg-6 col-md-6">
                                        <div class="col-md-4 col-lg-4">
                                            <label>Details of Complaint</label>
                                        </div>
                                        <div class="col-md-8">

                                            @Html.TextAreaFor(m => m.InquiryVm.Complaint_Remarks, new { @class = "form-control col-md-12 col-xs-12", rows = 3 })
                                            @Html.ValidationMessageFor(m => m.InquiryVm.Complaint_Remarks, "", new { @class = "label label-warning" })


                                        </div>
                                    </div>
                                    <div class="form-group col-lg-12 col-md-12">
                                        <div class="col-md-2 col-lg-2">
                                            <label>Agent's comments </label>
                                        </div>
                                        <div class="col-md-10">
                                            @Html.TextAreaFor(m => m.InquiryVm.Agent_Comments, new { @class = "form-control col-md-12 col-xs-12", rows = 3 })
                                            @Html.ValidationMessageFor(m => m.InquiryVm.Agent_Comments, "", new { @class = "label label-warning" })


                                        </div>
                                    </div>
                                    <div class="form-group col-md-12">
                                        <button type="submit" style="margin: 5px 15px 0 0" class="btn btn-primary pull-right" onclick="OnSumitClick()"><span class="fa fa-save"></span>&nbsp;Submit</button>
                                    </div>
                                    <br clear="all" />

                                </div>
                                <!--Inquiry tab content-->


                            </div>
                            <!-- /.tab-content -->
                        </div>


                        <!--Tabs End-->

                    </div>
                </section>
            }
        </section>
    </div>
</div>

<script type="text/javascript">
    var dropDownDictHierarchyComplaint = [];
    var dropDownDictHierarchySuggestion = [];
    var dropDownDictHierarchyInquiry = [];


    var dropDownDictComplaint = [];
    var dropDownDictSuggestion = [];
    var dropDownDictInquiry = [];

    var serverSideDropDownUrl;

    $('#IsCnicPresent').change(function () {
        if ($(this).is(":checked")) {
            $("#CnicTxtBox").prop("disabled", true);
        } else {
            $("#CnicTxtBox").prop("disabled", false);
        }
    });

    $(document).ready(function() {
        $('#IsCnicPresent').trigger("change");

        serverSideDropDownUrl = '@Url.Action("GetDynamicOptionListAgainstSearch", "GeneralApi")?campaignId=1&categoryId=2&searchStr=3';
        //debugger;
        PopulateDropDownDictionaryHierarchy();

        RegisterDropDownListChangeEventsForProvinceDistrict("userControlPersonProvince", "userControlPersonDistrict", $('#ComplaintVm_Compaign_Id').val());

        RegisterDropDownListChangeEventsCustomDictionary(dropDownDictHierarchyComplaint);
        RegisterDropDownListChangeEventsCustomDictionary(dropDownDictHierarchySuggestion);
        RegisterDropDownListChangeEventsCustomDictionary(dropDownDictHierarchyInquiry);
        //RegisterDropDownListChangeEventsForProvinceDistrict("complaintUserControlProvince", "complaintUserControlDistrict", "complaintUserControlTownTehsil", "complaintUserControlUc");
        //RegisterDropDownListChangeEventsForProvinceDistrict("suggestionUserControlProvince", "suggestionUserControlDistrict", "suggestionUserControlTownTehsil", "suggestionUserControlUc");
        //RegisterDropDownListChangeEventsForProvinceDistrict("inquiryUserControlProvince", "inquiryUserControlDistrict", "inquiryUserControlTownTehsil", "inquiryUserControlUc");

        PopulateDropDownDictionary();
        RegisterDropDownListChangeEventsCustomDictionary(dropDownDictComplaint);
        RegisterDropDownListChangeEventsCustomDictionary(dropDownDictSuggestion);
        RegisterDropDownListChangeEventsCustomDictionary(dropDownDictInquiry);

        //RegisterDropDownListChangeEventsComplaintTypes("ComplaintVm_Complaint_Category", "ComplaintVm_Complaint_SubCategory");
        //RegisterDropDownListChangeEventsComplaintTypes("SuggestionVm_Complaint_Category", "SuggestionVm_Complaint_SubCategory");
        //RegisterDropDownListChangeEventsComplaintTypes("InquiryVm_Complaint_Category", "InquiryVm_Complaint_SubCategory");

        setSelectedListOfDropDown("userControlPersonDistrict", "@Model.PersonalInfoVm.IfNotNull(m => m.District_Id)");
        $('form').removeData('validator');
        $('form').removeData('unobtrusiveValidation');
        $.validator.unobtrusive.parse('form');


        function formatRepo(repo) {
            if (repo.loading) return repo.text;

            var markup = "<div class='select2-result-repository clearfix'>" +
                "<div class='select2-result-repository__avatar'><img src='" + repo.owner.avatar_url + "' /></div>" +
                "<div class='select2-result-repository__meta'>" +
                "<div class='select2-result-repository__title'>" + repo.full_name + "</div>";

            if (repo.description) {
                markup += "<div class='select2-result-repository__description'>" + repo.description + "</div>";
            }

            markup += "<div class='select2-result-repository__statistics'>" +
                "<div class='select2-result-repository__forks'><i class='fa fa-flash'></i> " + repo.forks_count + " Forks</div>" +
                "<div class='select2-result-repository__stargazers'><i class='fa fa-star'></i> " + repo.stargazers_count + " Stars</div>" +
                "<div class='select2-result-repository__watchers'><i class='fa fa-eye'></i> " + repo.watchers_count + " Watchers</div>" +
                "</div>" +
                "</div></div>";

            return markup;
        }

        function formatRepoSelection(repo) {
            return repo.full_name || repo.text;
        }

        //window.location = serverSideDropDownUrl;
        $('.js-data-example-ajax').each(function (i, obj) {
            //alert(obj.id);
            var splitStr = obj.id.split("___");
            var campaignId = parseInt(splitStr[2]);
            var categoryId = parseInt(splitStr[3]);
            //alert(splitStr[2]);
            $(obj).select2({
                ajax: {
                    //url: "https://api.github.com/search/repositories",
                    url: '@Url.Action("GetDynamicOptionListAgainstSearch", "GeneralApi")',
                    //?campaignId='+campaignId+'&categoryId='+categoryId+'&searchStr=3'
                    //url: serverSideDropDownUrl,
                    type: 'GET',
                    dataType: 'json',
                    delay: 250,
                    //data: { campaignId: campaignId, categoryId: categoryId, searchStr: params.term },
                    data: function (params) {
                        return {
                            searchStr: params.term, // search term
                            page: params.page || 1,
                            campaignId: campaignId,
                            categoryId: categoryId
                        };
                    },
                    processResults: function (data, params) {
                        debugger;
                        // parse the results into the format expected by Select2
                        // since we are using custom formatting functions we do not need to
                        // alter the remote JSON data, except to indicate that infinite
                        // scrolling can be used
                        params.page = params.page || 1;

                        //data = [{ id: 0, text: 'enhancement' }, { id: 1, text: 'bug' }, { id: 2, text: 'duplicate' }, { id: 3, text: 'invalid' }, { id: 4, text: 'wontfix' }];

                        return {
                            results: data.ListItems,
                            pagination: {
                                more: (params.page * 10) < data.TotalCount
                            }
                        };
                    },
                    cache: true
                },
                //escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
                minimumInputLength: 1,
                //templateResult: formatRepo, // omitted for brevity, see the source of this page
                //templateSelection: formatRepoSelection // omitted for brevity, see the source of this page
            });
        });
    });


    /*
    $('.form-control').on('input keydown', function (e) {
        debugger;
        e.preventDefault();
        alert('olololo');
        //var i = $(this).attr('data-column');key
        //var v = $(this).val();
        //$('#agentListing').DataTable().columns(i).search(v).draw();
    });
    */

    function OnSumitClick() {
        $('#currentComplaintTypeTab').val($('.nav-tabs .active').text());
        debugger;
        if ($('#AddComplaintForm').valid()) {
            ShowLoading();
        }
        //alert($('.nav-tabs .active').text());
        //alert("messi");
    }

    // Populate Hierarchy Dictioary done

    function PopulateDropDownDictionaryHierarchy() {
        //alert(dropDownDict);
        // complaint
        dropDownDictHierarchyComplaint.push({
            key: "complaintUserControlProvince",
            value: "Districts?campaignId=" + $('#ComplaintVm_Compaign_Id').val()
        });

        dropDownDictHierarchyComplaint.push({
            key: "complaintUserControlDistrict",
            value: "TownTehsils?campaignId=" + $('#ComplaintVm_Compaign_Id').val()
        });

        dropDownDictHierarchyComplaint.push({
            key: "complaintUserControlTownTehsil",
            value: "UnionCouncils?campaignId=" + $('#ComplaintVm_Compaign_Id').val()
        });

        dropDownDictHierarchyComplaint.push({
            key: "complaintUserControlUc",
            value: "Wards?campaignId=" + $('#ComplaintVm_Compaign_Id').val()
        });

        dropDownDictHierarchyComplaint.push({
            key: "complaintUserControlWards",
            value: null
        });

        //Suggestion list

        dropDownDictHierarchySuggestion.push({
            key: "suggestionUserControlProvince",
            value: "Districts?campaignId=" + $('#ComplaintVm_Compaign_Id').val()
        });

        dropDownDictHierarchySuggestion.push({
            key: "suggestionUserControlDistrict",
            value: "TownTehsils?campaignId=" + $('#ComplaintVm_Compaign_Id').val()
        });

        dropDownDictHierarchySuggestion.push({
            key: "suggestionUserControlTownTehsil",
            value: "UnionCouncils?campaignId=" + $('#ComplaintVm_Compaign_Id').val()
        });

        dropDownDictHierarchySuggestion.push({
            key: "suggestionUserControlUc",
            value: "Wards?campaignId=" + $('#ComplaintVm_Compaign_Id').val()
        });

        dropDownDictHierarchySuggestion.push({
            key: "suggestionUserControlWards",
            value: null
        });


        //Inquiry list

        dropDownDictHierarchyInquiry.push({
            key: "inquiryUserControlProvince",
            value: "Districts?campaignId=" + $('#ComplaintVm_Compaign_Id').val()
        });

        dropDownDictHierarchyInquiry.push({
            key: "inquiryUserControlDistrict",
            value: "TownTehsils?campaignId=" + $('#ComplaintVm_Compaign_Id').val()
        });

        dropDownDictHierarchyInquiry.push({
            key: "inquiryUserControlTownTehsil",
            value: "UnionCouncils?campaignId=" + $('#ComplaintVm_Compaign_Id').val()
        });

        dropDownDictHierarchyInquiry.push({
            key: "inquiryUserControlUc",
            value: "Wards?campaignId=" + $('#ComplaintVm_Compaign_Id').val()
        });

        dropDownDictHierarchyInquiry.push({
            key: "inquiryUserControlWards",
            value: null
        });

    }


    function PopulateDropDownDictionary() {
        //alert(dropDownDict);hasDepartment

        if ($('#ComplaintVm_hasDepartment').val() == 'True') {
            dropDownDictComplaint.push({
                key: "ComplaintVm_departmentId",
                value: "ComplaintTypesByDepartmentId?campaignId=" + $('#ComplaintVm_Compaign_Id').val() + "&ComplaintType=" + '@((int)Config.ComplaintType.Complaint)'
            });
        }

        if ($('#SuggestionVm_hasDepartment').val() == 'True') {
            dropDownDictSuggestion.push({
                key: "SuggestionVm_departmentId",
                value: "ComplaintTypesByDepartmentId?campaignId=" + $('#ComplaintVm_Compaign_Id').val() + "&ComplaintType=" + '@((int)Config.ComplaintType.Suggestion)'
            });
        }

        if ($('#InquiryVm_hasDepartment').val() == 'True') {
            dropDownDictInquiry.push({
                key: "InquiryVm_departmentId",
                value: "ComplaintTypesByDepartmentId?campaignId=" + $('#ComplaintVm_Compaign_Id').val() + "&ComplaintType=" + '@((int)Config.ComplaintType.Inquiry)'
            });
        }

        dropDownDictComplaint.push({
            key: "ComplaintVm_Complaint_Category",
            value: "ComplaintSubType?campaignId=" + $('#ComplaintVm_Compaign_Id').val() + "&ComplaintType=" + '@((int)Config.ComplaintType.Complaint)'
        });

        dropDownDictComplaint.push({
            key: "ComplaintVm_Complaint_SubCategory",
            value: null
        });

        dropDownDictSuggestion.push({
            key: "SuggestionVm_Complaint_Category",
            value: "ComplaintSubType?campaignId=" + $('#ComplaintVm_Compaign_Id').val() + "&ComplaintType=" + '@((int)Config.ComplaintType.Suggestion)'
        });

        dropDownDictSuggestion.push({
            key: "SuggestionVm_Complaint_SubCategory",
            value: null
        });

        dropDownDictInquiry.push({
            key: "InquiryVm_Complaint_Category",
            value: "ComplaintSubType?campaignId=" + $('#ComplaintVm_Compaign_Id').val() + "&ComplaintType=" + '@((int)Config.ComplaintType.Inquiry)'
        });

        dropDownDictInquiry.push({
            key: "InquiryVm_Complaint_SubCategory",
            value: null
        });

    }

</script>