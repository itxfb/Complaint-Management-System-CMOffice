@model VmLogin
@using CaptchaMvc.HtmlHelpers
@using CaptchaMvc;
@{
    //Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>Login - PITB CRM</title>
    <meta content='width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no' name='viewport'>
    <link href='http://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700,300italic,400italic,600italic' rel='stylesheet' type='text/css'>
    <link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css" rel="stylesheet" type="text/css" />
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/jquery")
    <script src='https://www.google.com/recaptcha/api.js'></script>
    <style>
        a:link {
            color: #FBF87F;
            text-decoration: none;
        }

        a:visited {
            color: #FBF87F;
            text-decoration: none;
        }

        a:hover {
            color: #FBF8C8;
            text-decoration: underline;
        }

        a:active {
            color: #FBF87F;
            text-decoration: underline;
        }
        img {
            width: auto;
        }

        .cpatcha {
            color: #fff;
        }

            .cpatcha input {
                color: #000;
            }

        input[name='CaptchaInputText'] {
            width: auto;
        }
    </style>
</head>
<body class="login-page-noBg" style="background-image: url('@Model.LayoutImageUrl');">
    <div class="login-box">

        <div class="login-box-body">
            <div class="login-logo">
                @if (@Model.LayoutPopupImageUrl == null)
                {
                    <a href="@Url.Action("Login", "Account")"><img src="~/img/logo.png" class="img-responsive" /></a>
                }
                else
                {
                    <a href="@Url.Action("Login", "Account")"><img src=@Model.LayoutPopupImageUrl class="img-responsive" /></a>
                }
            </div><!-- /.login-logo -->
            @using (Html.BeginForm("Login", "Account", FormMethod.Post))
            {
                @Html.AntiForgeryToken()

                <div class="form-group has-feedback">
                    @Html.TextBoxFor(m => m.Username, new { @class = "form-control", placeholder = "Enter username" })
                    @Html.ValidationMessageFor(m => m.Username, null, new { @class = "text-yellow" })
                </div>
                <div class="form-group has-feedback">
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control", placeholder = "Enter password" })
                    @Html.ValidationMessageFor(m => m.Password, null, new { @class = "text-yellow" })
                </div>

                <div class="form-group has-feedback cpatcha">
                    @Html.MathCaptcha()
                </div>

                <div class="text-center"> <label class="text-yellow">@ViewBag.ErrorMessage</label></div>
                <div class="row">
                    <div class="col-xs-4 col-xs-offset-4">
                        <button type="submit" class="btn btn-primary btn-block btn-flat sign_in_btn">Sign In</button>
                    </div><!-- /.col -->
                </div>

            }
        </div><!-- /.login-box-body -->
    </div><!-- /.login-box -->
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/bootstrap")
</body>

</html>

<script type="text/javascript">
    var onloadCallback = function () {
        //alert("reCaptcha is ready !!!");
    };

</script>

<script src="https://www.google.com/recaptcha/api.js?onload=onloadCallback&render=explicit" async defer>

</script>  